Ref link:https://k21academy.com/terraform-iac/variables-in-terraform/

terraform.tfvars = only change we make in this method by putting variable values in this file and
call 'file' during terraform apply.



command:
Instead of using > terraform apply -var "region=us-east-1"
here we use > terraform apply -var-file="terraform.tfvars" ( or ) terraform apply -var-file="/tmp/terraform.tfvars"


steps:
1. create all below tf files
2. New note : create one new file named "terraform.tfvars"
region = "us-east-1"

3. terraform plan -var-file="terraform.tfvars"
4. terraform apply -var-file="terraform.tfvars"  [ this will take variable values from terraform.tfvars file ]

Note: 
1.file name - extension should be "file.tfvars"
2. you can create any number of file.tfvars as per your env requirements.
Ex: prod.tfavrs & dev.tfvards & qa.tfvars  [ you can put ami , region , instancetype etc in each of these file ]

3. filename alone vary for each env during terraform apply execution.
Ex: prod >> terraform apply -var-file="prod.tfvars"
Ex: dev >> terraform apply -var-file="dev.tfvars"
Ex: qa >> terraform apply -var-file="qa.tfvars"


--------------------------------------------------------------------------------
tf files:


#main.tf
provider "aws" {
  region = var.region
}

resource "aws_instance" "Demo-server" {
  ami           = lookup(var.ami, var.region)
  instance_type = var.instancetype["prod"]
  tags = {
    Name = "ExampleInstance"
  }
}



#variable.tf

variable "region" {}

variable "instancetype" {
  type = map
  default = {
  dev = "t2.micro"
  prod = "t3.micro"
  }
}


variable "ami" {
  type = map
  default = {
  us-east-1 = "ami-0533f2ba8a1995cf9"
  ap-south-1 = "ami-068d43a544160b7ef"
  }
}
